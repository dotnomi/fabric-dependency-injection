plugins {
    id("java-library")
    id("maven-publish")
    id("co.uzzu.dotenv.gradle") version("$dotenv_version")
    id("com.github.johnrengelman.shadow") version("$shadow_version")
}

group = project.library_group
version = project.library_version

repositories {
    mavenCentral()
}

dependencies {
    compileOnly("org.slf4j:slf4j-api:$slf4j_version")
    annotationProcessor("com.google.auto.service:auto-service:$google_auto_service_version")
    compileOnly("com.google.auto.service:auto-service:$google_auto_service_version")
    implementation ("org.reflections:reflections:$reflections_version")

    testImplementation platform("org.junit:junit-bom:$junit_version")
    testImplementation("org.junit.jupiter:junit-jupiter")
}

test { useJUnitPlatform() }

def targetJavaVersion = 21
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release.set(targetJavaVersion)
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
}

shadowJar { mergeServiceFiles() }

publishing {
    publications {
        register("mavenJava", MavenPublication) {
            groupId = project.library_group
            artifactId = "fabric-dependency-injection"
            version = project.library_version
            from components.java
        }
    }
    repositories {
        maven {
            name = "fabric-dependency-injection"
            url = "https://maven.pkg.github.com/dotnomi/fabric-dependency-injection"
            credentials {
                username = env.fetch("GITHUB_ACTOR", "")
                password = env.fetch("GITHUB_TOKEN", "")
            }
        }
    }
}

tasks.register("printProjectName") { doLast { println project.name } }
tasks.register("printProjectVersion") { doLast { println project.version } }